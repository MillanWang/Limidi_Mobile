Immediate TODOS
-Figure out multitouchness. Probably just need to make some stuff async
-Remove boiler plate stuff from the default expo generation
-Make a settings area to dynamically set IP and port

Communications with Desktop server
    -RTP-MIDI software seems promissing, but depends greatly on RN_Expo supporting those messages. This would be best to make it DAW independant.
    -Backup would be to set up an API type server that takes requests and translates them into midi messages. STUCK WITH THIS FOR NOW CAUSE. Rework comms later because mobile side is priority for now
    -Avoid the built in FL studio API SDK so that we ain't married to that DAW as tempting as it is for my personal use case 







MOBILE

Comms functions should be 2 tier functions 
Grid tab sets calls outer function with comms state hooks. 
The returns of those outer funcs will be passed down to grid elements as a callback to be called with MIDI info 


Hirarchy
    Grid tab
        - Can switch between different screen panel tabs. 
        - No interconnection between tabs aside from duplicate option on creation
        - Is really just a container for multiple grids
        - Will contain settings that need to be communicated with individual grids. i.e. networking settings
        - Will have a play/edit mode toggle to pass down to all individual grids
        - All functional and structural options will be on this level. Cosmetic options below
        - State hooks will be sent down to individual grids for global settings


        Individual grid
            - Edit mode will choose the positioning of the individual grid elements
            - Grid elements will not be able to move in play mode
            - Eventually have individual grid options for styling. Cosmetic options per individual grid only

            Grid Element
                - Incoming props for play/edit mode
                - In edit mode, setup parameters for what happens in play mode


Elements
    -Vertical sliders. Similar to mixers
    -Tapable drum pads


Play Mode
    -Using elements transmits signals to the desktop local server to then get translated to a MIDI signal the DAW can handle




Element Edit Modes
    -Should be a modal type window that still leaves the grid partially visible
    -Transparency/opacity control
    Pad Edit Mode
        -Options: 
            MIDI Channel? (Probably a rarer use case for )
            Note letter
            Octave
            Velocity mode : {set constant, random in given range, x-gradient, y-gradient}
            Styling : {static color, static image, 2 step color interpolation, 2 step image interpolation, looping video animation}

    Slider Edit mode
        -Options:
            Percentage based value ranges
            id number? Need more research on if that would be useful
            Styling : {sliderType, coloring}


Grid Edit Mode
    -Edit levels? Simplified vs Full Control
    -Every element tapable and opens that element's edit window. 
    -Elements will have grid square dimensions and the user will be able to move them around. Position customization
    -Need to have some templates. Pads only, sliders only, half and half
    -Maybe reserve one square grid to be for choosing the page. Number of pages will be limited by hardware tho cause that much media at once will be big